// <auto-generated />
using System;
using EscolaAlf_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EscolaAlf_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210129180320_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EscolaAlf_API.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionNumber")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Option");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pedro Álvares Cabral",
                            OptionNumber = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Napoleão Bernardes",
                            OptionNumber = 2,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Elizabeth I",
                            OptionNumber = 3,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Michael Jackson",
                            OptionNumber = 4,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Células da pele",
                            OptionNumber = 1,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Células dos ossos",
                            OptionNumber = 2,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Células de gordura",
                            OptionNumber = 3,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Células de defesa",
                            OptionNumber = 4,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "H202",
                            OptionNumber = 1,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "CH4",
                            OptionNumber = 2,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 11,
                            Description = "N2",
                            OptionNumber = 3,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 12,
                            Description = "H2O",
                            OptionNumber = 4,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 13,
                            Description = "Uma ferramenta",
                            OptionNumber = 1,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 14,
                            Description = "Uma linguagem de programção",
                            OptionNumber = 2,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 15,
                            Description = "Uma marca de carro",
                            OptionNumber = 3,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 16,
                            Description = "Uma empresa de tecnologia",
                            OptionNumber = 4,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 17,
                            Description = "Leite",
                            OptionNumber = 1,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 18,
                            Description = "Suco",
                            OptionNumber = 2,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 19,
                            Description = "Chimarrão",
                            OptionNumber = 3,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 20,
                            Description = "Água",
                            OptionNumber = 4,
                            QuestionId = 5
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Quem descobriu o Brasil?"
                        },
                        new
                        {
                            Id = 2,
                            Description = "O que são células adiposas?"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Qual a fórmula da água?"
                        },
                        new
                        {
                            Id = 4,
                            Description = "O que é 'C#'?"
                        },
                        new
                        {
                            Id = 5,
                            Description = "O que a vaca bebe?"
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2003, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Matheus"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2003, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cristina"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(2004, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Diego"
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(2003, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ronaldo"
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(2002, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emilly"
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.StudentGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentGrade");
                });

            modelBuilder.Entity("EscolaAlf_API.Models.StudentReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TestQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("StudentReply");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OptionId = 1,
                            StudentId = 1,
                            TestQuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            OptionId = 11,
                            StudentId = 1,
                            TestQuestionId = 2
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.StudentSituation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Approval")
                        .HasColumnType("bit");

                    b.Property<double>("Average")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StudentSituation");
                });

            modelBuilder.Entity("EscolaAlf_API.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("TestQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("Template");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OptionId = 1,
                            TestQuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            OptionId = 12,
                            TestQuestionId = 2
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Test");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.TestQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TestQuestion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            QuestionNumber = 1,
                            TestId = 1,
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 3,
                            QuestionNumber = 2,
                            TestId = 1,
                            Weight = 10
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 2,
                            QuestionNumber = 1,
                            TestId = 2,
                            Weight = 2
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 4,
                            QuestionNumber = 2,
                            TestId = 2,
                            Weight = 3
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 3,
                            QuestionNumber = 1,
                            TestId = 3,
                            Weight = 20
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 5,
                            QuestionNumber = 2,
                            TestId = 3,
                            Weight = 30
                        });
                });

            modelBuilder.Entity("EscolaAlf_API.Models.StudentReply", b =>
                {
                    b.HasOne("EscolaAlf_API.Models.TestQuestion", "TestQuestion")
                        .WithMany()
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestQuestion");
                });

            modelBuilder.Entity("EscolaAlf_API.Models.Template", b =>
                {
                    b.HasOne("EscolaAlf_API.Models.TestQuestion", "TestQuestion")
                        .WithMany()
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestQuestion");
                });
#pragma warning restore 612, 618
        }
    }
}
